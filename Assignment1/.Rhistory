version
q()
q()
q()
version
library(MASS)
data("Boston")
dim(Boston)
head(Boston)
?Boston
Boston[20,]
Boston[20,:]
Boston[20,]
Boston[1:10,]
plot(Boston$zn,Boston$indus, data = Boston)
?Boston
x11()
?Boston
pairs(Boston)
###########################################################
##
## This code demonstrates single and multiple regression
##
## Created: September 9, 2014
## Edited: September, 2020
##
###########################################################
rm(list = ls())
#library(ElemStatLearn) #dont need it
library(MASS)
setwd("~/Desktop/STA_545_Fall2014")
############################
# Load the data
############################
data(Boston)
?Boston
names(Boston)
boston <- Boston
############################
# Simple Regression
############################
fit <- lm(medv ~ lstat, data = boston)
names(fit)
summary(fit)
# Compute confidence interval
confint(fit)
# Compute a Confidence interval for specific values of the 	predictors....
predict(fit, newdata = data.frame(lstat = c(5,10,15)))
predict(fit, newdata = data.frame(lstat = c(5,10,15)), interval = "confidence")
#############################################
## Multiple Regression Model
#############################################
# build a small model
small_model <- lm(medv ~ lstat + age, data = boston)
summary(small_model)
large_model <- lm(medv ~ ., data = boston)
summary(large_model)
trimmed_model <- lm(medv~ .-age, data = boston)
my_summary <- summary(trimmed_model)
names(my_summary)
my_summary$coefficients
my_summary$adj.r.squared
################
## Sri Balaji Muruganandam
## 50414549
## SDM Assignment 1
## Cereal Data
###############
#install.packages("skimr")
#skimr provides in-depth statistics about the data
library(skimr)
rm(list = ls())
setwd("G:\\SDM_Sem01\\Assignment1")
c_data <- read.delim("cereal.csv",sep = ",")
#Dimension of the data
dim(c_data)
#Viewing the sample data
head(c_data, 10)
tail(c_data, 5)
#Summary of the dataset
summary(c_data)
#ZValues and Counts of Categorical predictors
table(c_data$mfr)
table(c_data$type)
#Checking for missing data
sum(is.na(c_data))   #There is no missing value in the dataset
#Skimming to get in-depth statistics about the data
skim(c_data)
#Grouping data by manufacturer and skimming the data
grp_data <- c_data %>% dplyr::group_by(mfr)
skim(grp_data)
#Plotting cereal data
x11()
plot(c_data)
x11()
plot(c_data$calories,c_data$protein,col="#4B3869")
x11()
hist(c_data$potass,breaks = 15, col="#4B3869", border = "#6D8299")
x11()
hist(c_data$calories,breaks = 10, col="#4B3869", border = "#6D8299")
x11()
hist(c_data$protein,breaks = 6, col="#4B3869", border = "#6D8299")
x11()
hist(c_data$fat,breaks = 5, col="#4B3869", border = "#6D8299")
x11()
hist(c_data$sodium,breaks = 15, col="#4B3869", border = "#6D8299")
x11()
hist(c_data$fiber,breaks = 14, col="#4B3869", border = "#6D8299")
x11()
hist(c_data$carbo,breaks = 12, col="#4B3869", border = "#6D8299")
x11()
hist(c_data$sugars,breaks = 12, col="#4B3869", border = "#6D8299")
x11()
hist(c_data$potass,breaks = 12, col="#4B3869", border = "#6D8299")
x11()
hist(c_data$vitamins,breaks = 10, col="#4B3869", border = "#6D8299")
x11()
hist(c_data$shelf,breaks = 7, col="#4B3869", border = "#6D8299")
x11()
hist(c_data$weight,breaks = 7, col="#4B3869", border = "#6D8299")
x11()
hist(c_data$cups,breaks = 7, col="#4B3869", border = "#6D8299")
x11()
hist(c_data$rating,breaks = 10, col="#4B3869", border = "#6D8299")
x11()
col <- c_data$potass
a = hist(col,breaks = 15, col="#4B3869", border = "#6D8299")
x_axis <- seq(min(a),max(a), length = 40)
y_axis <- dnorm(x_axis,mean = mean(col), sd = sd(col))
y_axis <- y_axis*diff(h$mids[1:2])*length(col)
lines(x_axis, y_axis, col = "#4B3869", lwd = 2)
x11()
col <- c_data$potass
a = hist(col,breaks = 15, col="#4B3869", border = "#6D8299")
x_axis <- seq(min(a),max(a), length = 40)
y_axis <- dnorm(x_axis,mean = mean(col), sd = sd(col))
y_axis <- y_axis*diff(h$mids[1:2])*length(col)
lines(x_axis, y_axis, col = "red", lwd = 2)
den <- density(col)
plot(den)
den <- density(c_data$calories)
plot(den)
?density
View(c_data)
?str
?View
select(c_data,-type)
View(c_data)
select(c_data,-mfr)
newf = select(c_data,-mfr)
library("dplyr")
newf = select(c_data,-mfr)
newf
log(100)
log(100,10)
log(100, base = 10)
log(100, base = 10)/2
a = c(0,25,100)
b = log(a,10)
b
data.frame(b)
c = data.frame(b)
c
c$b
c$b == -Inf
table(c_data$potass)
table(c_data$rating)
summary(c_data$rating)
wget
getwd()
ls
load("cereal_clean_data.RData")
c_data
dim(c_data)
library(ISLR)
library(GGally)
install.packages("GGally")
library(GGally)
ggpairs(auto)
install.packages("ISLR")
ggpairs(auto)
ggpairs(c_data)
?predict
a = c(1,2,3)
lstat(a)
?data.frame
c_data
names(c_data)
bn = names(c_data)
bn
class(bn)
bn
bn
a = data.frame(("mfr" = 2,"type" = 1,"calories"= 115,"protein"= 2,"fat" = 2,"sodium" = 170,"fiber" = 2.0,"carbo" = 12.0,"sugars" = 8,"potass" = 1.5,"vitamins" = 0.25,"shelf" = 3,"weight" = 1.00,"cups" = 0.75))
df = data.frame("mfr" = 2,"type" = 1,"calories"= 115,"protein"= 2,"fat" = 2,"sodium" = 170,"fiber" = 2.0,"carbo" = 12.0,"sugars" = 8,"potass" = 1.5,"vitamins" = 0.25,"shelf" = 3,"weight" = 1.00,"cups" = 0.75)
df
dim(c_data)
Boston
dim(Boston)
x11()
h_value <- hist(Boston$crim, breaks = 5, main="Histogram of Crime Rate",xlab="Crime Rate",ylab = "Frequency")
text(h_value$mids,h_value$counts,labels=h_value$counts, adj=c(0.5, -0.5))
box()
x11()
t_value <- hist(Boston$tax, breaks = 5, main="Histogram of Tax",xlab="Tax",ylab = "Frequency")
text(t_value$mids,t_value$counts,labels=t_value$counts, adj=c(0.5, -0.5))
box()
t_value <- hist(Boston$tax, breaks = 5, main="Histogram of Tax",xlab="Tax",ylab = "Frequency")
text(t_value$mids,t_value$counts,labels=t_value$counts, adj=c(0.5, -0.5))
box()
x11()
p_value <- hist(Boston$ptratio, breaks = 5, main="Histogram of Pupil - teacher Ratio",xlab="Pupil - teacher Ratio",ylab = "Frequency")
text(p_value$mids,p_value$counts,labels=p_value$counts, adj=c(0.5, -0.5))
box()
